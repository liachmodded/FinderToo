buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'

version = "0.1"
group= "com.github.liachmodded"
archivesBaseName = "findertoo"

defaultTasks 'setupDecompWorkspace', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = "1.11.2"
    runDir = "run"
	mappings = "snapshot_20170324"
}

configurations {
    provided
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
        inheritOutputDirs true
    }
}

tasks.withType(Javadoc) {
    // disable the crazy super-strict doclint tool in Java 8
    options.addStringOption('Xdoclint:none', '-quiet')
}

afterEvaluate {
	jar.manifest.attributes.remove 'TweakClass'
}

sourceSets {
    main {
        // Refmap declaration must match the refmap name specified in the json config
        refMap = "mixins.findertoo.refmap.json"
    }
}

mixin {
    defaultObfuscationEnv notch
}

litemod {
    json {
        name = "FinderToo"
        displayName = "Finder too"
        author = "liach"
        mcversion = "1.11.2"
        mixinConfigs += "mixins.findertoo.json"
        version = project.version
    }
}

jar {
    from litemod.outputs
}

processResources {
    def map = [
        version: project.version,
        mcversion: project.minecraft.version,
    ]
    
	def tokens = ['litemod.json', 'update.json']

    // this will ensure that this task is redone when the versions change.
    inputs.properties map
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include tokens
        // replace
        expand map
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude tokens
    }
}
